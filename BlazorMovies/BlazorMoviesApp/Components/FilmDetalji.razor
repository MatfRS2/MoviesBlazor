@using BlazorMoviesApp.Models
@using BlazorMoviesApp.ViewModels
@using BlazorMoviesApp.Services

@inject IZanroviService zanroviService
@inject IFilmoviService filmoviService
@inject IOsvezenjeService osvezenjeService

@if (IzabraniFilm != null)
{
    @if (AktivniMod == Mod.Pregled)
    {
        <h2>Detalji za @IzabraniFilm.Naslov.ToUpper()</h2>
        <br />
        <table>
            <tr>
                <td><span>Id: </span></td>
                <td>@IzabraniFilm.FilmId</td>
            </tr>
            <tr>
                <td><span>Naslov: </span></td>
                <td>@IzabraniFilm.Naslov</td>
            </tr>
            <tr>
                <td><span>Žanr: </span></td>
                <td>@IzabraniFilm.Zanr.Naziv</td>
            </tr>
            <tr>
                <td><span>Uloženo: </span></td>
                <td>@IzabraniFilm.Ulozeno</td>
            </tr>
            <tr>
                <td><span>Prikazuje se od: </span></td>
                <td>@IzabraniFilm.DatumPocetkaPrikazivanja.ToString("dd.MM.yyyy")</td>
            </tr>
        </table>
        <button class="clear" @onclick="Izmeni"> Izmeni</button>
        <button class="clear" @onclick="Otkazi"> Otkaži</button>
    }
    @if (AktivniMod == Mod.Izmena)
    {
        <h2>Izmena podataka za @IzabraniFilm.Naslov.ToUpper()</h2>
        <br />
        <table>
            <tr>
                <td>
                    <label> Naslov: </label>
                </td>
                <td>
                    <input @bind="IzabraniFilm.Naslov" placeholder="Naslov">
                </td>
            </tr>
            <tr>
                <td>
                    <label> Žanr: </label>
                </td>
                <td>
                    <select @bind="IzabraniFilm.ZanrId">
                        @foreach (var zanr in zanrovi)
                        {
                            <option value="@zanr.ZanrId"> @zanr.Naziv </option>
                        }
                    </select>

                </td>
            </tr>
            <tr>
                <td>
                    <label> Uloženo: </label>
                </td>
                <td>
                    <input @bind="IzabraniFilm.Ulozeno" placeholder="Ulozeno">
                </td>
            </tr>
            <tr>
                <td>
                    <label> Prikazuje se od: </label>
                </td>
                <td>
                    <input @bind="IzabraniFilm.DatumPocetkaPrikazivanja"
                   placeholder="DatumPocetkaPrikazivanja" @bind:format="@FormatDatuma">
                </td>
            </tr>
        </table>
        <button class="clear" @onclick="Sacuvaj"> Sačuvaj</button>
        <button class="clear" @onclick="Otkazi"> Otkaži</button>
    }
}

@code
{
    private List<Zanr> zanrovi;

    private FilmGetDto izabraniFilm = null;

    private FilmGetDto IzabraniFilm
    {
        get => izabraniFilm;
        set
        {
            izabraniFilm = value;
        }
    }

    enum Mod { Pregled, Izmena };

    Mod AktivniMod { get; set; } = Mod.Pregled;

    private int filmId = -1;

    [Parameter]
    public int FilmId
    {
        get => filmId;
        set
        {
            if (filmId != value)
            {
                filmId = value;
            }
        }
    }

    [Parameter]
    public string FormatDatuma { get; set; } = "dd.MM.yyyy";

    private async Task OdrediPodatke()
    {
        zanrovi = await zanroviService.GetZanroviAsync();
        if (filmId > 0)
        {
            FilmGetDto item = await filmoviService.GetFilmAsync(filmId);
            izabraniFilm = item;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await OdrediPodatke();
    }

    protected override async Task OnParametersSetAsync()
    {
        await OdrediPodatke();
    }

    private async Task Izmeni()
    {
        AktivniMod = Mod.Izmena;
    }

    private async Task Sacuvaj()
    {
        AktivniMod = Mod.Pregled;
        FilmUpdateDto item = new FilmUpdateDto()
            {
                FilmId = IzabraniFilm.FilmId,
                DatumPocetkaPrikazivanja = IzabraniFilm.DatumPocetkaPrikazivanja,
                Naslov = IzabraniFilm.Naslov,
                Ulozeno = IzabraniFilm.Ulozeno,
                ZanrId = IzabraniFilm.ZanrId
            };
        int ret = await filmoviService.Update(item);
        IzabraniFilm = null;
        osvezenjeService.ZahtevajOsvezenje();
        if (ret != 0)
            throw new Exception(this.GetType().Name + "::Sacuvaj():");
    }

    private async Task Otkazi()
    {
        IzabraniFilm = null;
    }
}
