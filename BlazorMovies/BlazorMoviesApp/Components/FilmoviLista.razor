@using BlazorMoviesApp.Models
@using BlazorMoviesApp.ViewModels
@using BlazorMoviesApp.Services

@inject IFilmoviService filmoviService
@inject IOsvezenjeService osvezenjeService

@if (filmovi == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>
        <button disabled="@(AktivniMod==Mod.Dodavanje)" @onclick="Kreiraj1"> Kreiraj</button>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <label>
                        Naslov:
                        <div hidden="@(AktivniMod==Mod.Pregled)">
                            <br /><input @bind="filmAddDto.Naslov" />
                        </div>
                    </label>
                </th>
                <th>
                    <label>
                        Početak prikazivanja:
                        <div hidden="@(AktivniMod==Mod.Pregled)">
                            <br /><input @bind="filmAddDto.DatumPocetkaPrikazivanja"
                                     @bind:format="@FormatDatuma" />
                        </div>
                    </label>
                </th>
                <th>
                    <label>
                        Žanr:
                        <div hidden="@(AktivniMod==Mod.Pregled)">
                            <br />
                            <input @bind="filmAddDto.ZanrId" />
                        </div>
                    </label>
                </th>
                <th>
                    <label>
                        Uloženo:
                        <div hidden="@(AktivniMod==Mod.Pregled)">
                            <br />
                            <input type="number" @bind="filmAddDto.Ulozeno" />
                            <button @onclick="Dodaj"> Dodaj</button>
                            <button @onclick="OtkaziKreiranje"> Otkaži</button>
                        </div>
                    </label>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in filmovi)
            {
                <tr>
                    <td>
                        @item.Naslov.ToString()
                    </td>
                    <td>
                        @item.DatumPocetkaPrikazivanja.ToString("dd.MM.yyyy")
                    </td>
                    <td>
                        @item.ZanrId
                    </td>
                    <td>
                        @item.Ulozeno
                    </td>
                    <td>
                        <button class="select" @onclick="@(()=>Izaberi(item.FilmId))">Izaberi</button>
                        <button class="delete" @onclick="@(()=>Obrisi(item.FilmId))">Obriši</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<FilmGetDto> filmovi;

    private FilmAddDto filmAddDto = new FilmAddDto()
        {
            Naslov = "",
            DatumPocetkaPrikazivanja = DateTime.Today,
            ZanrId = -1,
            Ulozeno = 1M
        };

    enum Mod { Pregled, Dodavanje };

    private Mod AktivniMod { get; set; } = Mod.Pregled;

    [Parameter]
    public string FormatDatuma { get; set; } = "dd.MM.yyyy";

    [Parameter]
    public int IzabraniFilmId { get; set; } = -1;

    [Parameter] 
    public EventCallback<int> IzabraniFilmIdChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        osvezenjeService.OsvezenjeJeZahtevano += OsveziKomponentu;

        filmovi = await filmoviService.GetFilmsAsync();
    }

    private async Task Kreiraj1()
    {
        AktivniMod = Mod.Dodavanje;
    }

    private async Task Dodaj()
    {
        AktivniMod = Mod.Pregled;
        int ret = await filmoviService.Add(filmAddDto);
        if (ret == 0)
            filmovi = await filmoviService.GetFilmsAsync();
        else
            throw new Exception(this.GetType().Name + "::Dodaj():");
    }

    private async Task OtkaziKreiranje()
    {
        AktivniMod = Mod.Pregled;
    }

    private async Task Izaberi(int id)
    {
        IzabraniFilmId = id;
        await IzabraniFilmIdChanged.InvokeAsync(IzabraniFilmId);
    }

    private async Task Obrisi(int id)
    {
        int ret = await filmoviService.Delete(id);
        if (ret == 0)
            filmovi = await filmoviService.GetFilmsAsync();
        else
            throw new Exception(this.GetType().Name + "::Obrisi():");
    }

    private async void OsveziKomponentu()
    {
        filmovi = await filmoviService.GetFilmsAsync();
        StateHasChanged();
    }

}